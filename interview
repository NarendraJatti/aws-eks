https://aws.plainenglish.io/how-we-slashed-our-eks-bill-by-40-a-real-story-96b93ef7d450

access entries
=========
https://medium.com/@leocherian/amazon-eks-cluster-access-management-399de5fcf0be>good
https://medium.com/@john.shaw.zen/eks-access-entry-migrate-from-aws-auth-95b2fb7f6c4c
https://fixit-xdu.medium.com/aws-eks-access-entry-4a7e25ed6c3a
https://www.youtube.com/watch?v=dJljyWT38wU>>iam entries access
https://www.youtube.com/watch?v=EGdN21F2Jfw>>iam entries access
https://www.youtube.com/watch?v=EGdN21F2Jfw&t=1s>acces entries
https://dev.to/aws-builders/managing-aws-eks-access-entries-with-terraform-and-opentofu-414


eks questions>https://youtu.be/TPH5TAeZwg8?si=1qc_h-FxQf65-Tdo

EKS nodegroups instance types cannot be changed after creation. You'll have to create a new node group every time you'd like a new instance type.

Yes, you are correct. For secrets managed by AWS Secrets Manager, the application or pod needs to be restarted in most cases to fetch updated secrets. This is because the pod typically retrieves secrets only at startup and caches them in memory.

On the other hand, Vault Injector automatically updates secrets in the pod when they are rotated or changed, without requiring a pod restart. Vault Injector uses an agent to ensure that secrets are periodically updated and available to the application, avoiding the need for a manual restart.

If you need to automate the secret update process in an application fetching secrets from AWS Secrets Manager, you could implement a mechanism to periodically pull the latest secrets, or consider using a sidecar that can refresh secrets without restarting the pod.